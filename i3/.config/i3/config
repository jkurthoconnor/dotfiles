#                           I3 CONFIG FILE (V4)                              #
#              reference: https://i3wm.org/docs/userguide.html               #


##############################################################################
#                   LAUNCHING, MODES & FUNCTION KEYS                         #
##############################################################################

# set modifier key to OS key
set $mod Mod4

# NB: toggle workstation preference
# set $TERMINAL "/usr/local/bin/termite"
set $TERMINAL "/usr/bin/alacritty"

# open terminal: `i3-sensible-terminal` checks $TERMINAL value
# if dmenu doesn't respect $TERMINAL, set with
# `sudo update-alternatives --config x-terminal-emulator`
bindsym $mod+Return exec i3-sensible-terminal

# start dmenu program launcher
bindsym $mod+Shift+Return exec "dmenu_run -b -i \
                                -nb '#504945' -nf '#d5c4a1' \
                                -sb '#689d6a' -sf '#1d2021'"

# MODE DEFINITIONS AND BINDINGS
set $i3-meta i3 Meta: reload [c]onfig [r]estart [l]ock [e]xit
bindsym $mod+i mode "$i3-meta"
mode "$i3-meta" {
    # reload i3 configuration
    bindsym c reload, mode "default"
    # restart i3 in-place (preserves layout/session)
    bindsym r restart, mode "default"
    bindsym l exec i3lock -e --color "$blk-bg", mode "default"
    bindsym e exec "i3-nagbar -t warning -m 'This will end your X session.' \
                    -b 'Yes, exit i3' 'i3-msg exit'", mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $system System: [r]eboot [s]uspend [p]oweroff  ||  GPU: [i]ntel [n]vidia
bindsym $mod+Escape mode "$system"
mode "$system" {
    bindsym r exec systemctl reboot, mode "default"
    bindsym s exec systemctl suspend, mode "default"
    bindsym p exec systemctl poweroff, mode "default"

    # switches GPUs on Oryx Pro laptop
    bindsym i exec sudo system76-power graphics intel, mode "default"
    bindsym n exec sudo system76-power graphics nvidia, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $resize Resize Workspace
bindsym $mod+r mode "$resize"
mode "$resize" {
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


# FUNCTION KEY BINDINGS
# requires local sudoers type file in `sudoers.d` to bypass password
bindsym  XF86MonBrightnessUp exec sudo /home/jko/.config/i3/scripts/i3_bindings_intel_screen_brightness.sh -inc
bindsym  XF86MonBrightnessDown exec sudo /home/jko/.config/i3/scripts/i3_bindings_intel_screen_brightness.sh -dec


##############################################################################
#                           WINDOW NAVIGATION and BEHAVIOR                   #
##############################################################################

# toggle fullscreen mode for the focused window
bindsym $mod+f fullscreen toggle

# toggle tiling / floating mode for focused window
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Use mouse+$mod to drag floating windows
floating_modifier $mod

# toggle show/hide scratchpad
bindsym $mod+Shift+s scratchpad show

# kill focused window
bindsym $mod+Shift+q kill

# does focus follow mouse?
focus_follows_mouse no

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

# change focus (directional)
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window (directional)
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# landscape outputs default to horizontal split; portrait to vertical
default_orientation auto
# make future splits horizontal (side-by-side)
bindsym $mod+s split h
# make future splits vertical (over-under)
bindsym $mod+v split v

workspace_layout default
# change existing container layout
bindsym $mod+t layout toggle split
bindsym $mod+w layout stacking
bindsym $mod+e layout tabbed

# use `xprop` to get window props; matching uses PCREs 
# `WM_CLASS(STRING) = "<instance>", "<class>"`
# `_NET_WM_NAME()` ="<title>"

# assign clients to workspaces when app maps the window
# assign [class="^Slack$"] $workspace8

# assign client to scratchpad
for_window [title="(?i)^scratch"] move scratchpad

# float popups & dialogues
for_window [window_role="(?i)pop_up"] floating enable
for_window [title="(?i)pop-up"] floating enable
for_window [window_role="(?i)dialog"] floating enable
for_window [window_role="(?i)menu"] floating enable
for_window [window_role="(?i)about"] floating enable
for_window [window_role="(?i)preferences"] floating enable
for_window [title="(?i)preferences"] floating enable
for_window [title="(?i)page unresponsive"] floating enable

# float specified client instances
for_window [instance="wicd-client.py"] floating enable resize set 400 600 move position center
for_window [instance="^arandr"] floating enable move position center
for_window [instance="^etcher-electron"] floating enable move position center
for_window [instance="^lxappearance"] floating enable
for_window [instance="^pa(man)|(vumeter)|(vucontrol)"] floating enable
for_window [instance="pavucontrol"] resize set 400 600 move position center
for_window [instance="^pcmanfm"] floating enable
for_window [instance="(?i)^org.gnome.nautilus"] floating enable
for_window [instance="^qtconfig-qt4"] floating enable
for_window [instance="^teensy"] floating enable resize set 400 600 move position center
for_window [instance="^zoom"] floating enable move position center


#############################################################################
#               OUTPUT / WORKSPACE NAVIGATION and BEHAVIOR                  #
#############################################################################

# set workspace default name variables
set $workspace0  "0:trm"
set $workspace1  "1:trm"
set $workspace2  "2:trm"
set $workspace3  "3:trm"
set $workspace4  "4:trm"
set $workspace5  "5:trm"
set $workspace6  "6:trm"
set $workspace7  "7:trm"
set $workspace8  "8:com"
set $workspace9  "9:msc"

# change workspace name
bindsym $mod+n exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

# switch to numbered workspace
bindsym $mod+0 workspace number $workspace0
bindsym $mod+1 workspace number $workspace1
bindsym $mod+2 workspace number $workspace2
bindsym $mod+3 workspace number $workspace3
bindsym $mod+4 workspace number $workspace4
bindsym $mod+5 workspace number $workspace5
bindsym $mod+6 workspace number $workspace6
bindsym $mod+7 workspace number $workspace7
bindsym $mod+8 workspace number $workspace8
bindsym $mod+9 workspace number $workspace9

# can one switch to prev workspace with '$mod+current-workspace-number'?
workspace_auto_back_and_forth yes

# move focused workspace to next output / screen (loops back)
bindsym $mod+Shift+n move workspace to output right

# move focused container to numbered workspace
bindsym $mod+Shift+0 move container to workspace number $workspace0
bindsym $mod+Shift+1 move container to workspace number $workspace1
bindsym $mod+Shift+2 move container to workspace number $workspace2
bindsym $mod+Shift+3 move container to workspace number $workspace3
bindsym $mod+Shift+4 move container to workspace number $workspace4
bindsym $mod+Shift+5 move container to workspace number $workspace5
bindsym $mod+Shift+6 move container to workspace number $workspace6
bindsym $mod+Shift+7 move container to workspace number $workspace7
bindsym $mod+Shift+8 move container to workspace number $workspace8
bindsym $mod+Shift+9 move container to workspace number $workspace9

# set output variables
# `xrandr --current` for current state or `--listmonitors`
set $monitorLeft HDMI-0
set $monitorRight DP-1
set $monitorLeftSchr DP-2
set $monitorRightSchr DP-0
set $laptopScreen eDP-1
set $nvidiaLaptopScreen eDP-1-1
set $zenScreen DVI-I-2-1

# bind workspaces to monitors (1st found takes binding)
workspace $workspace0 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace1 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace2 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace3 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace4 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace5 output $monitorLeft $monitorLeftSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace6 output $monitorRight $monitorRightSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace7 output $monitorRight $monitorRightSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace8 output $monitorRight $monitorRightSchr $laptopScreen $nvidiaLaptopScreen
workspace $workspace9 output $monitorRight $monitorRightSchr $laptopScreen $zenScreen


###############################################################################
#                           AESTHETICS                                       #
##############################################################################

# Font for window titles & bar unless specified in bar block
font pango:DejaVu Sans Mono 12
# font pango:DejaVu Sans Mono 8

title_align center
hide_edge_borders smart
force_display_urgency_hint 750 ms
# NOTE: setting pixel border removes title bars
default_border pixel 1

# set color variables from `~/.Xresources`
set_from_resource $lt-bg     i3wm.color19
set_from_resource $blk-bg    i3wm.color0
set_from_resource $drk-bg    i3wm.color18
set_from_resource $lt-txt    i3wm.color15
set_from_resource $drk-txt   i3wm.color0
set_from_resource $status    i3wm.color17
set_from_resource $lt-status i3wm.color16
set_from_resource $indicator i3wm.color5
set_from_resource $urgent    i3wm.color6

# Configure, Style & Start i3bar(s)
bar {
        id bar-0
        output primary
        tray_output primary
        separator_symbol " "
        position bottom
        status_command i3status
        tray_padding 3

        colors {
              background          $blk-bg
              statusline          $status
              separator           $status

#                                 border   bkgrnd   text
              focused_workspace   $blk-bg  $blk-bg  $lt-status
              active_workspace    $blk-bg  $blk-bg  $status
              inactive_workspace  $blk-bg  $blk-bg  $status
              urgent_workspace    $blk-bg  $urgent  $drk-txt
        }
}

bar {
        id bar-1
        output DP-0
        output DP-1
        status_command i3status --config ~/.config/i3status/small_config
        tray_output none

        colors {
              background          $blk-bg
              statusline          $status
              separator           $status

#                                 border   bkgrnd   text
              focused_workspace   $blk-bg  $blk-bg  $lt-status
              active_workspace    $blk-bg  $blk-bg  $status
              inactive_workspace  $blk-bg  $blk-bg  $status
              urgent_workspace    $blk-bg  $urgent  $drk-txt
        }
}

# Widow Bar Colors
#                        border   bkgrnd   txt      indicator   child_border
client.focused           $lt-bg   $lt-bg   $lt-txt  $urgent     $status
client.focused_inactive  $drk-bg  $drk-bg  $lt-txt  $urgent     $lt-bg
client.unfocused         $drk-bg  $drk-bg  $lt-txt  $indicator  $lt-bg 
client.urgent            $urgent  $urgent  $lt-txt  $indicator  $lt-bg
client.placeholder       $lt-bg   $lt-bg   $lt-bg   $lt-bg      $lt-bg



##############################################################################
#                           STARTUP CALLS                                    #
##############################################################################

# load audio services by hostname
exec $HOME/.config/i3/scripts/i3_audio.sh

# load cloud storage services by hostname
exec_always $HOME/.config/i3/scripts/i3_cloud_storage.sh

# since .xinitrc is bypassed when X is started via a display manager
#+ the relevant X settings are sourced by the following script when necessary
exec $HOME/.config/i3/scripts/i3_Xsettings_for_dm_boot.sh

# load networking services by hostname 
exec $HOME/.config/i3/scripts/i3_networking.sh

# load pre-defined workspaces by hostname
exec $HOME/.config/i3/scripts/i3_predefined_workspace_layouts.sh

# # vim:filetype=i3
